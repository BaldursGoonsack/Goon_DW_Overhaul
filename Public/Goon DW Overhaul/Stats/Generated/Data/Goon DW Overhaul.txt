// ==================================== Toggle passive ====================================

new entry "Goon_Extra_Offhand_Attack_Toggle"
type "PassiveData"
// Extra Offhand Attack
data "DisplayName" "hf0a68b9ag768fg483eg8aecg3662e5dfa027"
// Can make an additional free offhand attack after making an unarmed or weapon attack with your offhand.
data "Description" "h237c0768g48c0g4778g8902ge0226bf70a1d"
data "Icon" "PassiveFeature_ExtraAttack"
// You may toggle this feature on and off.
data "ExtraDescription" "h71374fc8g784cg41e3ga5f0g9cc48ba14c84;2"
data "Properties" "IsToggled"
//
data "ToggleOnFunctors" "ApplyStatus(GOON_EXTRA_OFFHAND_ATTACK_TOGGLED, 100, -1)"
data "ToggleOffFunctors" "RemoveStatus(GOON_EXTRA_OFFHAND_ATTACK_TOGGLED)"

new entry "GOON_EXTRA_OFFHAND_ATTACK_TOGGLED"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableCombatlog;DisablePortraitIndicator;DisableOverhead;ApplyToDead;IgnoreResting"
data "Passives" "Goon_Extra_Offhand_Attack_Functionality;Goon_Extra_Offhand_Attack_Technical"
data "StatusGroups" "SG_RemoveOnRespec"

// ==================================== Main passive replicating vanilla's Extra Attack passive ====================================

// Main passive
new entry "Goon_Extra_Offhand_Attack_Functionality"
type "PassiveData"
// Extra Offhand Attack
data "DisplayName" "hf0a68b9ag768fg483eg8aecg3662e5dfa027"
// Can make an additional free offhand attack after making an unarmed or weapon attack with your offhand.
data "Description" "h237c0768g48c0g4778g8902ge0226bf70a1d"
data "Icon" "PassiveFeature_ExtraAttack"
data "Properties" "IsHidden"
//
data "StatsFunctorContext" "OnCast;OnStatusRemoved;OnStatusApplied"
data "Conditions" "(context.HasContextFlag(StatsFunctorContext.OnCast) and GoonBonusExtraAttackSpellCheck() and HasUseCosts('BonusActionPoint', true) and not Tagged('EXTRA_ATTACK_BLOCKED',context.Source) and not HasStatus('SLAYER_PLAYER',context.Source) and not HasStatus('SLAYER_PLAYER_10',context.Source) and TurnBased(context.Source)) or (context.HasContextFlag(StatsFunctorContext.OnStatusRemoved) and StatusId('INITIAL_ATTACK_TECHNICAL') and TurnBased()) and (IsMeleeAttack())"
data "StatsFunctors" "IF(context.HasContextFlag(StatsFunctorContext.OnCast)):ApplyStatus(GOON_EXTRA_OFFHAND_ATTACK, 100, 1)"

// The actual status providing the extra attack
new entry "GOON_EXTRA_OFFHAND_ATTACK"
type "StatusData"
data "StatusType" "BOOST"
// Extra Offhand Attack
data "DisplayName" "hf0a68b9ag768fg483eg8aecg3662e5dfa027"
// Make an additional offhand weapon &lt;LSTag Tooltip="AttackRoll"&gt;attack&lt;/LSTag&gt; this turn.
data "Description" "h7702fda1g218eg46a8g9ae3g8d692a018218"
data "Icon" "PassiveFeature_ExtraAttack"
data "StatusPropertyFlags" "DisableCombatlog;DisablePortraitIndicator;DisableOverhead;ApplyToDead"
//
data "StackId" "GOON_EXTRA_OFFHAND_ATTACK"
data "StackPriority" "20"
data "TickType" "StartTurn"
data "Boosts" "UnlockSpellVariant(GoonBonusExtraAttackCheck(),ModifyUseCosts(Replace,BonusActionPoint,0,0,BonusActionPoint),ModifyIconGlow(),ModifyTooltipDescription())"
data "RemoveConditions" "GoonBonusExtraAttackSpellCheck() and HasUseCosts('BonusActionPoint',false,context.Target)"
//  "and not IsMainHandAttack()" try removing this from RemoveConditions
data "RemoveEvents" "OnSpellCast"
//data "OnRemoveFunctors" "IF(not RemoveCause(StatusRemoveCause.TimeOut)):ApplyStatus(GOON_EXTRA_OFFHAND_ATTACK_TRACKER, 100, 1)"
// We don't need the above, the implementation for this offhand extra attack is built different
data "StatusGroups" "SG_RemoveOnRespec"

// ==================================== Technicals for tracking swings and debuff application ====================================

new entry "Goon_Extra_Offhand_Attack_Technical"
type "PassiveData"
data "Properties" "IsHidden"
//
data "StatsFunctorContext" "OnCast"
data "Conditions" "IsOffHandAttack() and IsMeleeAttack()"
data "StatsFunctors" "IF(not HasStatus('GOON_EXTRA_OFFHAND_ATTACK')):ApplyStatus(GOON_EXTRA_OFFHAND_ATTACK_TRACKER, 100, 1);ApplyStatus(GOON_EXTRA_OFFHAND_ATTACK_STRAIN, 100, 1)"

// Tracks the use of the toggle and keeps the debuffs applied/applying for the duration
new entry "GOON_EXTRA_OFFHAND_ATTACK_TRACKER"
type "StatusData"
data "StatusType" "BOOST"
// %%% Extra Offhand Attack Tracker
data "DisplayName" "h61fe6cb1g5adcg4ea5ga58cg4cad30a9947c"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog;ApplyToDead"
//
data "StackId" "GOON_EXTRA_OFFHAND_ATTACK_TRACKER"
data "TickType" "StartTurn"
data "Passives" "Goon_Extra_Offhand_Attack_Technical"
data "StatusGroups" "SG_RemoveOnRespec"

// ==================================== Stacking debuff ====================================

new entry "GOON_EXTRA_OFFHAND_ATTACK_STRAIN"
type "StatusData"
data "StatusType" "BOOST"
// Strained Attacks
data "DisplayName" "h2a8e2492g38ecg4670g931fge2a0fd704f84"
// You attack with rapid succession but your accuracy suffers.
// Your melee offhand attacks benefit from Extra Attack, but each swing adds a stacking -1 penalty to &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt;, causing you to miss more often. This adds up until the beginnning of your next turn.
data "Description" "h42bb790cg016ag418cg8ad2g25ae49b8c1b2"
data "Icon" "PassiveFeature_DualWielder_PassiveBonuses"
data "StatusPropertyFlags" "FreezeDuration;MultiplyEffectsByDuration"
//
data "StackId" "GOON_EXTRA_OFFHAND_ATTACK_STRAIN"
data "StackType" "Additive"
data "Boosts" "RollBonus(Attack,-1)"
data "BoostConditions" "IsOffHandAttack() and IsMeleeAttack()"
data "RemoveConditions" "not HasStatus('GOON_EXTRA_OFFHAND_ATTACK_TRACKER')"
data "RemoveEvents" "OnStatusRemoved"
data "StatusGroups" "SG_RemoveOnRespec"